version: '3.8'
services:
  db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    # run as root initially so the entrypoint can chown the data volume
    user: root
    # container_name removed to let Compose manage names and avoid conflicts
    environment:
      SA_PASSWORD: "Kla1peda17!"
      ACCEPT_EULA: "Y"
      MSSQL_PID: "Developer"
    # Expose SQL Server port on the internal Docker network only to avoid host port conflicts
    expose:
      - "1433"
    # Also map port to the host for integration tests
    ports:
      - "1433:1433"
    volumes:
      # Use a Docker named volume for SQL Server data to avoid host bind permission issues
      - mssql-data:/var/opt/mssql
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P \"$${SA_PASSWORD}\" -Q \"SELECT 1\""]
      interval: 10s
      retries: 5

  api:
    build:
      context: .
      dockerfile: Dockerfile
    # container_name removed to let Compose manage names and avoid conflicts
    depends_on:
      - db
    environment:
      DB_SERVER: db
      DB_PORT: "1433"
      DB_NAME: FoldsAndFlavors
      DB_USER: sa
      DB_PASSWORD: "Kla1peda17!"
      JWT_SECRET: "your-secret-key"
      ASPNETCORE_URLS: http://+:4000
    ports:
      - "4000:4000"
    restart: on-failure

volumes:
  mssql-data: